import { spawn } from 'child_process';

console.log('üîç DIAGN√ìSTICO COMPLETO DEL SISTEMA PETSHOP POS');
console.log('================================================');

async function runDiagnostic() {
  try {
    console.log('\n1Ô∏è‚É£ Probando conexi√≥n a la base de datos...');
    await runCommand('node', ['test_connection.js']);
    
    console.log('\n2Ô∏è‚É£ Probando creaci√≥n de ventas...');
    await runCommand('node', ['test_sales.js']);
    
    console.log('\n3Ô∏è‚É£ Probando servidor backend...');
    await runCommand('node', ['test_server.js']);
    
    console.log('\nüéâ DIAGN√ìSTICO COMPLETADO - TODO FUNCIONANDO');
  } catch (error) {
    console.error('\n‚ùå ERROR EN EL DIAGN√ìSTICO:', error.message);
    console.log('\nüí° SOLUCIONES:');
    console.log('1. Verificar que PostgreSQL est√© ejecut√°ndose');
    console.log('2. Verificar variables de entorno (.env)');
    console.log('3. Ejecutar: npm start (para iniciar el servidor)');
    console.log('4. Verificar que el puerto 4000 est√© disponible');
  }
}

function runCommand(command, args = []) {
  return new Promise((resolve, reject) => {
    const process = spawn(command, args, { 
      stdio: 'inherit',
      shell: true 
    });
    
    process.on('close', (code) => {
      if (code === 0) {
        resolve();
      } else {
        reject(new Error(`Comando fall√≥ con c√≥digo ${code}`));
      }
    });
  });
}

runDiagnostic();
